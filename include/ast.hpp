#ifndef ast_hpp
#define ast_hpp

#include "ast/ast_expression.hpp"
#include "ast/ast_primitives.hpp"
#include "ast/ast_unary.hpp"
#include "ast/ast_functions.hpp"
#include "ast/ast_node.hpp"
#include "context.hpp"
#include "ast_list.hpp"
#include "ast/ast_identifier.hpp"
#include "ast/ast_translationunit.hpp"
#include "ast/ast_declarator.hpp"
#include "ast/ast_number.hpp"
#include "ast/ast_initdeclarator.hpp"
#include "ast/ast_declaration.hpp"
#include "ast/ast_typespecifier.hpp"
#include "ast/ast_return.hpp"
#include "ast/ast_compoundstatment.hpp"
#include "ast/ast_directdeclarator.hpp"
#include "ast/ast_funcdefinition.hpp"
#include "ast/ast_emptycompound.hpp"
#include "ast/ast_binaryop.hpp"
#include "ast/binary_operations/ast_binaryadd.hpp"
#include "ast/binary_operations/ast_binarysub.hpp"
#include "ast/binary_operations/ast_binarydiv.hpp"
#include "ast/binary_operations/ast_binarymul.hpp"
#include "ast/binary_operations/ast_binaryor.hpp"
#include "ast/binary_operations/ast_binaryand.hpp"
#include "ast/binary_operations/ast_binaryxor.hpp"
#include "ast/binary_operations/ast_binarymod.hpp"
#include "ast/ast_unaryop.hpp"
#include "ast/unary_operations/ast_unaryneg.hpp"
#include "ast/unary_operations/ast_unarynot.hpp"
#include "ast/ast_while.hpp"
#include "ast/ast_ifstatement.hpp"
#include "ast/ast_assignmentexpression.hpp"
#include "ast/assignment_operations/ast_assignmentequal.hpp"
#include "ast/ast_functionlist.hpp"
#include "ast/binary_operations/ast_lessthan.hpp"
#include "ast/binary_operations/ast_greaterthan.hpp"
#include "ast/binary_operations/ast_leftshift.hpp"
#include "ast/binary_operations/ast_rightshift.hpp"
#include "ast/binary_operations/ast_binaryequal.hpp"
#include "ast/binary_operations/ast_greaterorequal.hpp"
#include "ast/binary_operations/ast_lessorequal.hpp"
#include "ast/ast_functioncall.hpp"
#include "ast/ast_parameterdeclaration.hpp"
#include "ast/ast_funcarguments.hpp"
#include "ast/assignment_operations/ast_assignmentadd.hpp"
#include "ast/assignment_operations/ast_assignmentand.hpp"
#include "ast/assignment_operations/ast_assignmentsub.hpp"
#include "ast/assignment_operations/ast_assignmentmul.hpp"
#include "ast/assignment_operations/ast_assignmentdiv.hpp"
#include "ast/assignment_operations/ast_assignmentmod.hpp"
#include "ast/assignment_operations/ast_assignmentxor.hpp"
#include "ast/assignment_operations/ast_assignmentor.hpp"
#include "ast/assignment_operations/ast_assignmentleft.hpp"
#include "ast/assignment_operations/ast_assignmentright.hpp"
#include "ast/ast_forfunction.hpp"
#include "ast/unary_operations/ast_unarynot2.hpp"
#include "ast/binary_operations/ast_logicaland.hpp"
#include "ast/binary_operations/ast_logicalor.hpp"
#include "ast/ast_increment.hpp"
#include "ast/ast_decrement.hpp"
#include "ast/ast_conditionals.hpp"
extern const Node *parseAST();

#endif
